#!/usr/bin/env node

'use strict';

const fs = require ('node:fs');

const path = require ('node:path');


const dir = path.resolve (process.cwd (), 'bench');

let help = 'Create a bench directory in this project to get started\n';

const printHelp = () => {
  process.stdout.write (help);
  process.exit (0);
};

if (!(fs.existsSync (dir))) printHelp ();

const benchmarks = (
  fs.readdirSync (dir)
  .filter (file => file.endsWith ('.js'))
  .map (file => file.slice (0, -'.js'.length))
);

help = `There are no benchmarks in the bench directory

  To create a benchmark, add a JavaScript file to the bench directory
  and define benchmarks as described by the sanctuary-benchmark README.

Example

  module.exports = require ('sanctuary-benchmark') (
    require ('ramda'),
    require ('sanctuary'),
    {left: 'Ramda', right: 'Sanctuary'},
    {map: lib => lib.map (x => x + 1) ([1, 2, 3])}
  );
`;

if (benchmarks.length === 0) printHelp ();

help = `Usage
  $ sanctuary-benchmark [options]

Options
  --benchmark <name>                 The name of the benchmark file to run
  --colors, --no-colors              Enable or disable command line colors
  --help                             Print help and do nothing else
  --left-header <text>               Header describing the library on the left
  --match <glob>                     Match suite names by given glob
  --right-header <text>              Header describing the library on the right
  --significant-difference <number>  Change required for highlight in results

Available benchmarks
  ${benchmarks[0]} (default)
  ${(benchmarks.slice (1)).join ('\n  ')}
`;

const argv = process.argv.slice (2);

if (argv.indexOf ('--help') >= 0) printHelp ();

const defaults = {
  benchmark: benchmarks[0],
};

const options = argv.reduce (
  (options, x, i, xs) => ({
    /* eslint-disable key-spacing */
    benchmark:             x === '--benchmark'
                           ? benchmarks.indexOf (xs[i + 1]) < 0
                             ? printHelp ()
                             : String (xs[i + 1])
                           : options.benchmark,
    colors:                x === '--colors'
                           ? true : x === '--no-colors' ? false
                           : options.colors,
    leftHeader:            x === '--left-header'
                           ? String (xs[i + 1])
                           : options.leftHeader,
    match:                 x === '--match'
                           ? String (xs[i + 1])
                           : options.match,
    rightHeader:           x === '--right-header'
                           ? String (xs[i + 1])
                           : options.rightHeader,
    significantDifference: x === '--significant-difference'
                           ? Number (xs[i + 1])
                           : options.significantDifference,
    /* eslint-enable key-spacing */
  }),
  defaults
);

process.stdout.write (`Running benchmarks: ${options.benchmark}...\n\n`);

require (`${dir}/${options.benchmark}`) (options);
